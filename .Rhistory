# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'tritan')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Tritan')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'BrBg')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Pastel1')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Accent')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Dark2')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Set1')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Set2')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Set3')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Spectral')
?theme
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
axis.title = element_text(size = 20)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
axis.title = element_text(size = 18)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.ticks = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.ticks = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
(palette = 'Spectral')
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point()
top4_df %>%
ggplot(aes(x = Y, y = X, color = PdDistrict)) +
geom_point()
table(top4_df$PdDistrict)
unique(top4_df$PdDistrict)
?drop_na
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# filter the data to the top 4 crimes
top4_df <- df %>%
drop_na() %>%
filter(Category == c('ASSAULT') |
Category == 'LARCENY/THEFT' |
Category == 'VANDALISM' |
Category == 'VEHICLE THEFT')
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
top4_df %>%
ggplot(aes(x = Y, y = X, color = PdDistrict)) +
geom_point()
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point()
?geom_point
?theme
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) %>%
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude",
color = 'Neighborhood')
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) %>%
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude",
col = 'Neighborhood')
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) %>%
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude",
col = 'Neighborhood\n')
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) %>%
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend("Neighborhood"))
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend("Neighborhood"))
?guides
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend("Neighborhood")) +
theme(legend.text = element_text(face = 'bold', size = '14'))
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend("Neighborhood")) +
theme(legend.text = element_text(face = 'bold', size = '12'))
?guide_legend
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
override.aes = list(size=5))) +
theme(legend.text = element_text(face = 'bold', size = '12'))
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 14,
override.aes = list(size=5))) +
theme(legend.text = element_text(size = '12'))
?theme
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 14,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 14,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
library(plotly)
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 14,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
ggplotly(map_plot)
p <- ggplotly(map_plot)
p
p
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
p <- ggplotly(map_plot)
map_plot
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
bar_chart
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(anytime)
library(lubridate)
library(wesanderson)
library(gridExtra)
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# filter the data to the top 4 crimes
top4_df <- df %>%
drop_na() %>%
filter(Category == c('ASSAULT') |
Category == 'LARCENY/THEFT' |
Category == 'VANDALISM' |
Category == 'VEHICLE THEFT')
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
bar_chart
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
map_plot
#Changing the formats
df <- separate(df, 'Date', 'Date', sep = " ")
df$Date <- mdy(df$Date)
df$Hour <- hm(df$Time) %>% hour()
#df <- separate(df, Time, c('Hour', 'Min', 'Sec'), sep = ' ')
#head(df)
#Filtering 4 top crimes
df_4 <- filter(df, Category %in% c('ASSAULT', 'VANDALISM', 'VEHICLE THEFT', 'LARCENY/THEFT'))
df_4
#library(wesanderson)
#ldpal <- wes_palette("FantasticFox1", n =4, type = 'continuous')
my_plot <- ggplot(df_4, aes(Category, color = Category)) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
df_4 %>%
group_by(Hour) %>%
summarize(cnt = n()) %>%
ggplot(aes(Hour, y = cnt)) +
geom_line(stat = 'identity')
?grid.arrange
grid.arrange(my_plot, bar_chart, map_plot, ncol = 3)
grid.arrange(my_plot, bar_chart, map_plot, ncol = 2, nrow = 2)
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
grid.arrange(my_plot, bar_chart, map_plot, ncol = 2, nrow = 2)
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
grid.arrange(my_plot, bar_chart, map_plot, ncol = 2, nrow = 2)
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
scale_fill_brewer(palette = 'Spectral')
