Category == 'LARCENY/THEFT',
Category == 'VANDALISM',
Category == 'VEHICLE THEFT')
table(top4_df$Category)
table(top4_df$PdDistrict)
top4_df <- df %>%
filter(Category == c('ASSAULT') |
Category == 'LARCENY/THEFT' |
Category == 'VANDALISM' |
Category == 'VEHICLE THEFT')
table(top4_df$PdDistrict)
as.data.frame(table(top4_df$PdDistrict))
tibble(table(top4_df$PdDistrict))
as.data.fra(table(top4_df$PdDistrict))
as.data.frame(table(top4_df$PdDistrict))
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
neighborhood_freq
neighborhood_freq %>%
ggplot(aes(x = neighborhood, y = Freq)) %>%
geom_col()
neighborhood_freq %>%
ggplot(aes(x = neighborhood, y = Freq)) +
geom_col()
?fct_reorder
neighborhood_freq %>%
ggplot(aes(x = neighborhood, y = -Freq)) +
geom_col()
?reorder
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, neighborhood_freq$Freq), y = Freq)) +
geom_col()
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq)) +
geom_col()
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq)) +
geom_col() %>%
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neiborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neiborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq, color = neighborhood), y = Freq)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq)) +
geom_col(color = neighborhood) +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq)) +
geom_col(fill = neighborhood) +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq, fill = neighborhood), y = Freq)) +
geom_col(fill = neighborhood) +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col(fill = neighborhood) +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
colnames(neighborhood_freq)
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = 'neighborhood')) +
geom_col(fill = neighborhood) +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col(fill = neighborhood) +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'tritan')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Tritan')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'BrBg')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Pastel1')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Accent')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Dark2')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Set1')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Set2')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Set3')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none') +
scale_fill_brewer(palette = 'Spectral')
?theme
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
axis.title = element_text(size = 20)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
axis.title = element_text(size = 18)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.ticks = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.ticks = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
(palette = 'Spectral')
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point()
top4_df %>%
ggplot(aes(x = Y, y = X, color = PdDistrict)) +
geom_point()
table(top4_df$PdDistrict)
unique(top4_df$PdDistrict)
?drop_na
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# filter the data to the top 4 crimes
top4_df <- df %>%
drop_na() %>%
filter(Category == c('ASSAULT') |
Category == 'LARCENY/THEFT' |
Category == 'VANDALISM' |
Category == 'VEHICLE THEFT')
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
top4_df %>%
ggplot(aes(x = Y, y = X, color = PdDistrict)) +
geom_point()
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point()
?geom_point
?theme
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) %>%
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude",
color = 'Neighborhood')
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) %>%
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude",
col = 'Neighborhood')
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) %>%
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude",
col = 'Neighborhood\n')
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) %>%
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend("Neighborhood"))
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend("Neighborhood"))
?guides
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend("Neighborhood")) +
theme(legend.text = element_text(face = 'bold', size = '14'))
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend("Neighborhood")) +
theme(legend.text = element_text(face = 'bold', size = '12'))
?guide_legend
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
override.aes = list(size=5))) +
theme(legend.text = element_text(face = 'bold', size = '12'))
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 14,
override.aes = list(size=5))) +
theme(legend.text = element_text(size = '12'))
?theme
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 14,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 14,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
library(plotly)
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 14,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
ggplotly(map_plot)
p <- ggplotly(map_plot)
p
p
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12))
p <- ggplotly(map_plot)
map_plot
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 14)) +
scale_fill_brewer(palette = 'Spectral')
bar_chart
